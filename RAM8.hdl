// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way16(in = in, sel = address, a = a1, b = b1, c = c1, d = d1, e = e1, f = f1, g = g1, h = h1);
    DMux8Way(in = load, sel = address, a = l1, b = l2, c = l3, d = l4, e = l5, f = l6, g = l7, h = l8);

    Register(in = a1, load = l1, out = a2);
    Register(in = b1, load = l2, out = b2);
    Register(in = c1, load = l3, out = c2);
    Register(in = d1, load = l4, out = d2);
    Register(in = e1, load = l5, out = e2);
    Register(in = f1, load = l6, out = f2);
    Register(in = g1, load = l7, out = g2);
    Register(in = h1, load = l8, out = h2);

    Mux8Way16(a = a2, b = b2, c = c2, d = d2, e =e2, f = f2, g = g2, h = h2, sel = address, out = out);
}